diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py
index d8cb75a5f..c8819532a 100644
--- a/sphinx/ext/napoleon/docstring.py
+++ b/sphinx/ext/napoleon/docstring.py
@@ -256,27 +256,33 @@ class GoogleDocstring:
             line = self._line_iter.peek()
         return lines
 
-    def _consume_field(self, parse_type: bool = True, prefer_type: bool = False
+def _consume_field(self, parse_type: bool = True, prefer_type: bool = False
                        ) -> Tuple[str, str, List[str]]:
         line = next(self._line_iter)
-
+    
         before, colon, after = self._partition_field_on_colon(line)
         _name, _type, _desc = before, '', after
-
+    
         if parse_type:
             match = _google_typed_arg_regex.match(before)
             if match:
                 _name = match.group(1).strip()
                 _type = match.group(2)
-
+            else:
+                # also accept "type name" styles, e.g. "dict(str, str) opc_meta"
+                m_type_first = re.match(r'^\s*(?P<type>[^:]+?\([^\)]*\))\s+(?P<name>\S+)\s*$', before)
+                if m_type_first:
+                    _type = m_type_first.group('type').strip()
+                    _name = m_type_first.group('name').strip()
+    
         _name = self._escape_args_and_kwargs(_name)
-
+    
         if prefer_type and not _type:
             _type, _name = _name, _type
-
+    
         if _type and self._config.napoleon_preprocess_types:
             _type = _convert_type_spec(_type, self._config.napoleon_type_aliases or {})
-
+    
         indent = self._get_indent(line) + 1
         _descs = [_desc] + self._dedent(self._consume_indented_block(indent))
         _descs = self.__class__(_descs, self._config).lines()