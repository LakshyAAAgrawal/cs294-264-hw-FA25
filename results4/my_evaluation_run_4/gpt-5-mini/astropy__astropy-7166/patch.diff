diff --git a/astropy/utils/misc.py b/astropy/utils/misc.py
index de3fb01d1..42383f69d 100644
--- a/astropy/utils/misc.py
+++ b/astropy/utils/misc.py
@@ -527,15 +527,33 @@ class InheritDocstrings(type):
                  and len(key) > 4) or
                 not key.startswith('_'))
 
-        for key, val in dct.items():
-            if (inspect.isfunction(val) and
-                is_public_member(key) and
-                val.__doc__ is None):
-                for base in cls.__mro__[1:]:
-                    super_method = getattr(base, key, None)
-                    if super_method is not None:
-                        val.__doc__ = super_method.__doc__
-                        break
+for key, val in dct.items():
+            if not is_public_member(key):
+                continue
+            # Support plain functions, classmethod/staticmethod, and properties
+            if inspect.isfunction(val):
+                target = val
+            elif isinstance(val, (classmethod, staticmethod)):
+                target = val.__func__
+            elif isinstance(val, property):
+                target = val.fget
+            else:
+                target = None
+            if target is None or getattr(target, '__doc__', None) is not None:
+                continue
+            for base in cls.__mro__[1:]:
+                super_method = getattr(base, key, None)
+                if super_method is None:
+                    continue
+                if isinstance(super_method, (classmethod, staticmethod)):
+                    super_func = super_method.__func__
+                elif isinstance(super_method, property):
+                    super_func = super_method.fget
+                else:
+                    super_func = super_method
+                if super_func is not None and getattr(super_func, '__doc__', None):
+                    target.__doc__ = super_func.__doc__
+                    break
 
         super().__init__(name, bases, dct)