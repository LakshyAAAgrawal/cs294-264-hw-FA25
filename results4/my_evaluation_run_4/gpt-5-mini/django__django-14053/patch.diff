diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py
index 494890cc23..143b382a86 100644
--- a/django/contrib/staticfiles/storage.py
+++ b/django/contrib/staticfiles/storage.py
@@ -200,7 +200,7 @@ class HashedFilesMixin:
 
         return converter
 
-    def post_process(self, paths, dry_run=False, **options):
+def post_process(self, paths, dry_run=False, **options):
         """
         Post process the given dictionary of files (called from collectstatic).
 
@@ -226,17 +226,25 @@ class HashedFilesMixin:
             path for path in paths
             if matches_patterns(path, self._patterns)
         ]
+
+        # Track which original names we've already yielded to avoid duplicates
+        yielded = set()
+
         # Do a single pass first. Post-process all files once, then repeat for
         # adjustable files.
         for name, hashed_name, processed, _ in self._post_process(paths, adjustable_paths, hashed_files):
-            yield name, hashed_name, processed
+            if name not in yielded:
+                yield name, hashed_name, processed
+                yielded.add(name)
 
         paths = {path: paths[path] for path in adjustable_paths}
 
         for i in range(self.max_post_process_passes):
             substitutions = False
             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):
-                yield name, hashed_name, processed
+                if name not in yielded:
+                    yield name, hashed_name, processed
+                    yielded.add(name)
                 substitutions = substitutions or subst
 
             if not substitutions:
@@ -247,8 +255,6 @@ class HashedFilesMixin:
 
         # Store the processed paths
         self.hashed_files.update(hashed_files)
-
-    def _post_process(self, paths, adjustable_paths, hashed_files):
         # Sort the files by directory level
         def path_level(name):
             return len(name.split(os.sep))