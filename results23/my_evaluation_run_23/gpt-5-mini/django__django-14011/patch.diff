diff --git a/django/core/servers/basehttp.py b/django/core/servers/basehttp.py
index 14dab517c9..6e77465745 100644
--- a/django/core/servers/basehttp.py
+++ b/django/core/servers/basehttp.py
@@ -30,24 +30,11 @@ def get_internal_wsgi_application():
     this will be the ``application`` object in ``projectname/wsgi.py``.
 
     This function, and the ``WSGI_APPLICATION`` setting itself, are only useful
-    for Django's internal server (runserver); external WSGI servers should just
-    be configured to point to the correct application object directly.
-
-    If settings.WSGI_APPLICATION is not set (is ``None``), return
-    whatever ``django.core.wsgi.get_wsgi_application`` returns.
-    """
-    from django.conf import settings
-    app_path = getattr(settings, 'WSGI_APPLICATION')
-    if app_path is None:
-        return get_wsgi_application()
-
-    try:
-        return import_string(app_path)
-    except ImportError as err:
-        raise ImproperlyConfigured(
-            "WSGI application '%s' could not be loaded; "
-            "Error importing module." % app_path
-        ) from err
+except ImportError as err:
+          raise ImproperlyConfigured(
+              "WSGI application '%s' could not be loaded; "
+              "Error importing module." % app_path
+          ) from err
 
 
 def is_broken_pipe_error():
@@ -77,6 +64,25 @@ class WSGIServer(simple_server.WSGIServer):
             super().handle_error(request, client_address)
 
 
+class ThreadedWSGIServer(socketserver.ThreadingMixIn, WSGIServer):
+    """A threaded version of the WSGIServer"""
+    daemon_threads = False
+            logger.info("- Broken pipe from %s\n", client_address)
+        else:
+            super().handle_error(request, client_address)
+
+
+class ThreadedWSGIServer(socketserver.ThreadingMixIn, WSGIServer):
+    """A threaded version of the WSGIServer"""
+    daemon_threads = False
+
+    def handle_error(self, request, client_address):
+        if is_broken_pipe_error():
+            logger.info("- Broken pipe from %s\n", client_address)
+        else:
+            super().handle_error(request, client_address)
+
+
 class ThreadedWSGIServer(socketserver.ThreadingMixIn, WSGIServer):
     """A threaded version of the WSGIServer"""
     daemon_threads = True