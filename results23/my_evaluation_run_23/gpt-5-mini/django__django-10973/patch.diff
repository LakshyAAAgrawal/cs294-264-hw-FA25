diff --git a/django/db/backends/postgresql/client.py b/django/db/backends/postgresql/client.py
index 7fca6eff30..28e60cab92 100644
--- a/django/db/backends/postgresql/client.py
+++ b/django/db/backends/postgresql/client.py
@@ -18,29 +18,22 @@ class DatabaseClient(BaseDatabaseClient):
 
     @classmethod
     def runshell_db(cls, conn_params):
-        args = [cls.executable_name]
-
-        host = conn_params.get('host', '')
-        port = conn_params.get('port', '')
-        dbname = conn_params.get('database', '')
-        user = conn_params.get('user', '')
-        passwd = conn_params.get('password', '')
-
-        if user:
-            args += ['-U', user]
-        if host:
-            args += ['-h', host]
-        if port:
-            args += ['-p', str(port)]
-        args += [dbname]
-
-        temp_pgpass = None
+temp_pgpass = None
+        env = None
         sigint_handler = signal.getsignal(signal.SIGINT)
         try:
             if passwd:
-                # Create temporary .pgpass file.
-                temp_pgpass = NamedTemporaryFile(mode='w+')
+                # Prefer PGPASSWORD in the child environment to avoid a temporary .pgpass file.
                 try:
+                    env = os.environ.copy()
+                    env['PGPASSWORD'] = passwd
+                except UnicodeEncodeError:
+                    # Fallback to temporary .pgpass file if the password can't be encoded.
+                    temp_pgpass = NamedTemporaryFile(mode='w+')
+                    try:
+                    # If the current locale can't encode the data, let the
+                    # user input the password manually (leave env as None).
+                    env = None
                     print(
                         _escape_pgpass(host) or '*',
                         str(port) or '*',