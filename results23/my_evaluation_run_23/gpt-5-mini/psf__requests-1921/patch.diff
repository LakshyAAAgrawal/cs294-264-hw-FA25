diff --git a/requests/models.py b/requests/models.py
index cd232e6..5c813b3 100644
--- a/requests/models.py
+++ b/requests/models.py
@@ -361,11 +361,7 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):
         if port:
             netloc += ':' + str(port)
 
-        # Bare domains aren't valid URLs.
-        if not path:
-            path = '/'
-
-        if is_py2:
+if is_py2:
             if isinstance(scheme, str):
                 scheme = scheme.encode('utf-8')
             if isinstance(netloc, str):
@@ -382,14 +378,28 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):
             if query:
                 query = '%s&%s' % (query, enc_params)
             else:
-                query = enc_params
-
-        url = requote_uri(urlunparse([scheme, netloc, path, None, query, fragment]))
+url = requote_uri(urlunparse([scheme, netloc, path, None, query, fragment]))
         self.url = url
 
     def prepare_headers(self, headers):
         """Prepares the given HTTP headers."""
 
+        if headers:
+            # Skip any headers whose value is None so they are not sent as the string "None".
+            self.headers = CaseInsensitiveDict(
+                (to_native_string(name), value)
+                for name, value in headers.items()
+                if value is not None
+            )
+        else:
+            self.headers = CaseInsensitiveDict()
+                for name, value in headers.items()
+                if value is not None
+            )
+        else:
+            self.headers = CaseInsensitiveDict()
+        """Prepares the given HTTP headers."""
+
         if headers:
             self.headers = CaseInsensitiveDict((to_native_string(name), value) for name, value in headers.items())
         else: