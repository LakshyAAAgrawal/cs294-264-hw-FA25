diff --git a/sympy/physics/units/unitsystem.py b/sympy/physics/units/unitsystem.py
index a436880c4b..54f51142bc 100644
--- a/sympy/physics/units/unitsystem.py
+++ b/sympy/physics/units/unitsystem.py
@@ -120,14 +120,7 @@ def is_consistent(self):
         """
         Check if the underlying dimension system is consistent.
         """
-        # test is performed in DimensionSystem
-        return self.get_dimension_system().is_consistent
-
-    @property
-    def derived_units(self) -> tDict[Dimension, Quantity]:
-        return self._derived_units
-
-    def get_dimensional_expr(self, expr):
+def get_dimensional_expr(self, expr):
         from sympy.physics.units import Quantity
         if isinstance(expr, Mul):
             return Mul(*[self.get_dimensional_expr(i) for i in expr.args])
@@ -148,6 +141,13 @@ def get_dimensional_expr(self, expr):
         elif isinstance(expr, Quantity):
             return self.get_quantity_dimension(expr).name
         return S.One
+                       ds.get_dimensional_dependencies(addend_dim, mark_dimensionless=True):
+                        raise ValueError(
+                            'Dimension of "{}" is {}, '
+                            'but it should be {}'.format(
+                                addend, addend_dim, dim))
+                    factor += addend_factor
+                return factor, dim
 
     def _collect_factor_and_dimension(self, expr):
         """