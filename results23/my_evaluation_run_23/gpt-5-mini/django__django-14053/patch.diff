diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py
index 494890cc23..b1a5f811aa 100644
--- a/django/contrib/staticfiles/storage.py
+++ b/django/contrib/staticfiles/storage.py
@@ -228,23 +228,30 @@ class HashedFilesMixin:
         ]
         # Do a single pass first. Post-process all files once, then repeat for
         # adjustable files.
+        results = {}
         for name, hashed_name, processed, _ in self._post_process(paths, adjustable_paths, hashed_files):
-            yield name, hashed_name, processed
+            results[name] = (hashed_name, processed)
 
         paths = {path: paths[path] for path in adjustable_paths}
 
         for i in range(self.max_post_process_passes):
             substitutions = False
             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):
-                yield name, hashed_name, processed
+                # Keep the latest result for each original name so we only yield once,
+                # with the final hashed name/processed flag after all passes.
+                results[name] = (hashed_name, processed)
                 substitutions = substitutions or subst
 
             if not substitutions:
                 break
 
         if substitutions:
+            # If we exceeded max passes, preserve previous behavior of signaling error.
             yield 'All', None, RuntimeError('Max post-process passes exceeded.')
 
+        # After all passes are complete, yield each file exactly once with its final values.
+        for name, (hashed_name, processed) in results.items():
+            yield name, hashed_name, processed
         # Store the processed paths
         self.hashed_files.update(hashed_files)