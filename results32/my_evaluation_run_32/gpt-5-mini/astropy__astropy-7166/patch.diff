diff --git a/astropy/utils/misc.py b/astropy/utils/misc.py
index de3fb01d1..95c3b3b02 100644
--- a/astropy/utils/misc.py
+++ b/astropy/utils/misc.py
@@ -491,9 +491,6 @@ def did_you_mean(s, candidates, n=3, cutoff=0.8, fix=None):
                        matches[-1])
         return 'Did you mean {0}?'.format(matches)
 
-    return ''
-
-
 class InheritDocstrings(type):
     """
     This metaclass makes methods of a class automatically have their
@@ -519,24 +516,30 @@ class InheritDocstrings(type):
         >>> B.wiggle.__doc__
         u'Wiggle the thingamajig'
     """
-
     def __init__(cls, name, bases, dct):
         def is_public_member(key):
             return (
                 (key.startswith('__') and key.endswith('__')
                  and len(key) > 4) or
                 not key.startswith('_'))
-
         for key, val in dct.items():
-            if (inspect.isfunction(val) and
-                is_public_member(key) and
-                val.__doc__ is None):
-                for base in cls.__mro__[1:]:
-                    super_method = getattr(base, key, None)
-                    if super_method is not None:
-                        val.__doc__ = super_method.__doc__
-                        break
-
+            if is_public_member(key):
+                # Handle regular functions/methods
+                if inspect.isfunction(val) and val.__doc__ is None:
+                    for base in cls.__mro__[1:]:
+                        super_method = getattr(base, key, None)
+                        if super_method is not None:
+                            val.__doc__ = super_method.__doc__
+                            break
+                # Handle property descriptors: inherit fget docstring if missing
+                elif isinstance(val, property):
+                    fget = val.fget
+                    if fget is not None and getattr(fget, '__doc__', None) is None:
+                        for base in cls.__mro__[1:]:
+                            super_method = getattr(base, key, None)
+                            if isinstance(super_method, property) and super_method.fget is not None:
+                                fget.__doc__ = super_method.fget.__doc__
+                                break
         super().__init__(name, bases, dct)