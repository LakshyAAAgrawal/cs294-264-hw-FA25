diff --git a/requests/sessions.py b/requests/sessions.py
index a023e4e..d9a7d6b 100644
--- a/requests/sessions.py
+++ b/requests/sessions.py
@@ -20,7 +20,6 @@ from .hooks import default_hooks, dispatch_hook
 from .utils import to_key_val_list, default_headers, to_native_string
 from .exceptions import TooManyRedirects, InvalidSchema
 from .structures import CaseInsensitiveDict
-
 from .adapters import HTTPAdapter
 
 from .utils import requote_uri, get_environ_proxies, get_netrc_auth
@@ -29,15 +28,12 @@ from .status_codes import codes
 
 # formerly defined here, reexposed here for backward compatibility
 from .models import REDIRECT_STATI
-
-
 def merge_setting(request_setting, session_setting, dict_class=OrderedDict):
     """
     Determines appropriate setting for a given request, taking into account the
     explicit setting on that request, and the setting in the session. If a
     setting is a dictionary, they will be merged together using `dict_class`
     """
-
     if session_setting is None:
         return request_setting
 
@@ -46,14 +42,33 @@ def merge_setting(request_setting, session_setting, dict_class=OrderedDict):
 
     # Bypass if not a dictionary (e.g. verify)
     if not (
-            isinstance(session_setting, Mapping) and
-            isinstance(request_setting, Mapping)
+        isinstance(session_setting, Mapping) and
+        isinstance(request_setting, Mapping)
     ):
         return request_setting
-
     merged_setting = dict_class(to_key_val_list(session_setting))
     merged_setting.update(to_key_val_list(request_setting))
 
+    # Remove keys that are set to None in the request.
+    for (k, v) in request_setting.items():
+        if v is None:
+            try:
+                del merged_setting[k]
+            except KeyError:
+                pass
+
+    # Remove keys that are set to None in the session if not overridden by
+    # the request. This allows e.g. `session.headers['Accept-Encoding'] = None`
+    # to remove a default header instead of sending the literal value "None".
+    for (k, v) in session_setting.items():
+        if v is None and k not in request_setting:
+            try:
+                del merged_setting[k]
+            except KeyError:
+                pass
+
+    return merged_setting
+
     # Remove keys that are set to None.
     for (k, v) in request_setting.items():
         if v is None: