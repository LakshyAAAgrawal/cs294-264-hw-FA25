diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py
index 8e8c3da06a..dfd2e613f9 100644
--- a/django/core/handlers/base.py
+++ b/django/core/handlers/base.py
@@ -48,23 +48,20 @@ class BaseHandler:
             elif not handler_is_async and middleware_can_sync:
                 middleware_is_async = False
             else:
-                middleware_is_async = middleware_can_async
-            try:
-                # Adapt handler, if needed.
-                handler = self.adapt_method_mode(
-                    middleware_is_async, handler, handler_is_async,
-                    debug=settings.DEBUG, name='middleware %s' % middleware_path,
-                )
-                mw_instance = middleware(handler)
-            except MiddlewareNotUsed as exc:
-                if settings.DEBUG:
-                    if str(exc):
-                        logger.debug('MiddlewareNotUsed(%r): %s', middleware_path, exc)
-                    else:
-                        logger.debug('MiddlewareNotUsed: %r', middleware_path)
-                continue
-
-            if mw_instance is None:
+                try:
+                    # Adapt handler, if needed.
+                    adapted_handler = self.adapt_method_mode(
+                        middleware_is_async, handler, handler_is_async,
+                        debug=settings.DEBUG, name='middleware %s' % middleware_path,
+                    )
+                    mw_instance = middleware(adapted_handler)
+                except MiddlewareNotUsed as exc:
+                    if settings.DEBUG:
+                        if str(exc):
+                            logger.debug('MiddlewareNotUsed(%r): %s', middleware_path, exc)
+                        else:
+                            logger.debug('MiddlewareNotUsed: %r', middleware_path)
+                    continue
                 raise ImproperlyConfigured(
                     'Middleware factory %s returned None.' % middleware_path
                 )