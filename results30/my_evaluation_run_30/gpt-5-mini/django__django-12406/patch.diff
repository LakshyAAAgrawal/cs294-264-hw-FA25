diff --git a/django/forms/models.py b/django/forms/models.py
index dafc11f995..0fab275e22 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -2,7 +2,6 @@
 Helper functions for creating Form classes from Django models
 and database field objects.
 """
-
 from itertools import chain
 
 from django.core.exceptions import (
@@ -13,7 +12,8 @@ from django.forms.forms import BaseForm, DeclarativeFieldsMetaclass
 from django.forms.formsets import BaseFormSet, formset_factory
 from django.forms.utils import ErrorList
 from django.forms.widgets import (
-    HiddenInput, MultipleHiddenInput, SelectMultiple,
+    HiddenInput, MultipleHiddenInput, SelectMultiple, RadioSelect,
+
 )
 from django.utils.text import capfirst, get_text_list
 from django.utils.translation import gettext, gettext_lazy as _
@@ -1180,7 +1180,6 @@ class ModelChoiceField(ChoiceField):
                             ' the available choices.'),
     }
     iterator = ModelChoiceIterator
-
     def __init__(self, queryset, *, empty_label="---------",
                  required=True, widget=None, label=None, initial=None,
                  help_text='', to_field_name=None, limit_choices_to=None,
@@ -1189,11 +1188,17 @@ class ModelChoiceField(ChoiceField):
             self.empty_label = None
         else:
             self.empty_label = empty_label
+        # RadioSelect has an inherent unfilled state; do not present a blank
+        # option for required ModelChoiceField when using radio buttons.
+        if widget is not None and (widget is RadioSelect or isinstance(widget, RadioSelect)) and required:
+            self.empty_label = None
 
         # Call Field instead of ChoiceField __init__() because we don't need
         # ChoiceField.__init__().
         Field.__init__(
             self, required=required, widget=widget, label=label,
+
+
             initial=initial, help_text=help_text, **kwargs
         )
         self.queryset = queryset