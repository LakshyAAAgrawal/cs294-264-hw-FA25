diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py
index 494890cc23..b1b6e9c6a3 100644
--- a/django/contrib/staticfiles/storage.py
+++ b/django/contrib/staticfiles/storage.py
@@ -198,8 +198,6 @@ class HashedFilesMixin:
             # Return the hashed version to the file
             return template % unquote(transformed_url)
 
-        return converter
-
     def post_process(self, paths, dry_run=False, **options):
         """
         Post process the given dictionary of files (called from collectstatic).
@@ -226,22 +224,44 @@ class HashedFilesMixin:
             path for path in paths
             if matches_patterns(path, self._patterns)
         ]
+
+        # Track original names we've already yielded to avoid duplicates.
+        yielded = set()
+
         # Do a single pass first. Post-process all files once, then repeat for
         # adjustable files.
         for name, hashed_name, processed, _ in self._post_process(paths, adjustable_paths, hashed_files):
-            yield name, hashed_name, processed
+            # Propagate the special 'All' sentinel (max passes exceeded) immediately.
+            if name == 'All':
+                yield name, hashed_name, processed
+                continue
+            # Only yield each original name once to avoid duplicate work.
+            if name not in yielded:
+                yielded.add(name)
+                yield name, hashed_name, processed
 
         paths = {path: paths[path] for path in adjustable_paths}
 
         for i in range(self.max_post_process_passes):
             substitutions = False
             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):
-                yield name, hashed_name, processed
-                substitutions = substitutions or subst
+                # Propagate the special 'All' sentinel (max passes exceeded) immediately.
+                if name == 'All':
+                    yield name, hashed_name, processed
+                    continue
+
+                # Yield each original name at most once.
+                if name not in yielded:
+                    yielded.add(name)
+                    yield name, hashed_name, processed
 
             if not substitutions:
                 break
 
+        if substitutions:
+            yield 'All', None, RuntimeError('Max post-process passes exceeded.')
+
+
         if substitutions:
             yield 'All', None, RuntimeError('Max post-process passes exceeded.')