+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen
+ locale-gen
Generating locales (this might take a while)...
  en_US.UTF-8... done
Generation complete.
+ export LANG=en_US.UTF-8
+ LANG=en_US.UTF-8
+ export LANGUAGE=en_US:en
+ LANGUAGE=en_US:en
+ export LC_ALL=en_US.UTF-8
+ LC_ALL=en_US.UTF-8
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   django/db/models/deletion.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	django/db/models/deletion.py.orig

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit ddd83987faf4d7a57a8b6829a745906a1aa28dcc
Author: SWE-bench <setup@swebench.config>
Date:   Wed Sep 10 09:53:58 2025 +0000

    SWE-bench
+ git -c core.fileMode=false diff 19fc6376ce67d01ca37a91ef2f55ef769f50513a
diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py
index 92fe4affb9..170f45735a 100644
--- a/django/db/models/deletion.py
+++ b/django/db/models/deletion.py
@@ -265,17 +265,16 @@ class Collector:
             self.data[model] = sorted(instances, key=attrgetter("pk"))
 
         # if possible, bring the models in an order suitable for databases that
-        # don't support transactions or cannot defer constraint checks until the
-        # end of a transaction.
-        self.sort()
-        # number of objects deleted for each model label
-        deleted_counter = Counter()
-
         # Optimize for the case with a single obj and no dependencies
-        if len(self.data) == 1 and len(instances) == 1:
-            instance = list(instances)[0]
-            if self.can_fast_delete(instance):
-                with transaction.mark_for_rollback_on_error():
+        if len(self.data) == 1:
+            model, instances = next(iter(self.data.items()))
+            if len(instances) == 1:
+                instance = list(instances)[0]
+                if self.can_fast_delete(instance):
+                    with transaction.mark_for_rollback_on_error():
+                        count = sql.DeleteQuery(model).delete_batch([instance.pk], self.using)
+                    # Clear the instance's PK to reflect that it no longer exists in DB.
+
                     count = sql.DeleteQuery(model).delete_batch([instance.pk], self.using)
                 return count, {model._meta.label: count}
 
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
Requirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.0.dev20250910095358) (2024.2)
Requirement already satisfied: sqlparse in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.0.dev20250910095358) (0.4.4)
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 3.0.dev20190408092606
    Uninstalling Django-3.0.dev20190408092606:
      Successfully uninstalled Django-3.0.dev20190408092606
  Running setup.py develop for Django
Successfully installed Django-3.0.dev20250910095358
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git checkout 19fc6376ce67d01ca37a91ef2f55ef769f50513a tests/delete/tests.py
Updated 0 paths from a40bb59e08
+ git apply -v -
Checking patch tests/delete/tests.py...
Applied patch tests/delete/tests.py cleanly.
+ : '>>>>> Start Test Output'
+ ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 delete.tests
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
test_bulk (delete.tests.DeletionTests) ... ERROR
test_can_defer_constraint_checks (delete.tests.DeletionTests) ... ERROR
test_cannot_defer_constraint_checks (delete.tests.DeletionTests) ... skipped 'Database has feature(s) can_defer_constraint_checks'
test_delete_with_keeping_parents (delete.tests.DeletionTests) ... ERROR
test_delete_with_keeping_parents_relationships (delete.tests.DeletionTests) ... ERROR
test_deletion_order (delete.tests.DeletionTests) ... ERROR
test_hidden_related (delete.tests.DeletionTests) ... ERROR
test_instance_update (delete.tests.DeletionTests) ... ERROR
test_large_delete (delete.tests.DeletionTests) ... ERROR
test_large_delete_related (delete.tests.DeletionTests) ... ERROR
test_m2m (delete.tests.DeletionTests) ... ERROR
test_model_delete_returns_num_rows (delete.tests.DeletionTests) ... ERROR
test_proxied_model_duplicate_queries (delete.tests.DeletionTests) ... ERROR
test_queryset_delete_returns_num_rows (delete.tests.DeletionTests) ... ERROR
test_relational_post_delete_signals_happen_before_parent_object (delete.tests.DeletionTests) ... ERROR
test_fast_delete_empty_no_update_can_self_select (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_fk (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_inheritance (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_instance_set_pk_none (delete.tests.FastDeleteTests) ... FAIL
test_fast_delete_joined_qs (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_large_batch (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_m2m (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_qs (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_revm2m (delete.tests.FastDeleteTests) ... ERROR
test_auto (delete.tests.OnDeleteTests) ... ERROR
test_auto_nullable (delete.tests.OnDeleteTests) ... ERROR
test_cascade (delete.tests.OnDeleteTests) ... ERROR
test_cascade_from_child (delete.tests.OnDeleteTests) ... ERROR
test_cascade_from_parent (delete.tests.OnDeleteTests) ... ERROR
test_cascade_nullable (delete.tests.OnDeleteTests) ... ERROR
test_do_nothing (delete.tests.OnDeleteTests) ... ERROR
test_do_nothing_qscount (delete.tests.OnDeleteTests) ... FAIL
test_inheritance_cascade_down (delete.tests.OnDeleteTests) ... ERROR
test_inheritance_cascade_up (delete.tests.OnDeleteTests) ... ERROR
test_o2o_setnull (delete.tests.OnDeleteTests) ... ERROR
test_protect (delete.tests.OnDeleteTests) ... ok
test_setdefault (delete.tests.OnDeleteTests) ... ERROR
test_setdefault_none (delete.tests.OnDeleteTests) ... ERROR
test_setnull (delete.tests.OnDeleteTests) ... ERROR
test_setnull_from_child (delete.tests.OnDeleteTests) ... ERROR
test_setnull_from_parent (delete.tests.OnDeleteTests) ... ERROR
test_setvalue (delete.tests.OnDeleteTests) ... ERROR

======================================================================
ERROR: test_bulk (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 183, in test_bulk
    self.assertNumQueries(5, s.delete)
  File "/testbed/django/test/testcases.py", line 1066, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_can_defer_constraint_checks (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 1229, in skip_wrapper
    return test_func(*args, **kwargs)
  File "/testbed/tests/delete/tests.py", line 282, in test_can_defer_constraint_checks
    self.assertNumQueries(3, a.delete)
  File "/testbed/django/test/testcases.py", line 1066, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 310, in delete
    deleted_counter[model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_delete_with_keeping_parents (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 360, in test_delete_with_keeping_parents
    child.delete(keep_parents=True)
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_delete_with_keeping_parents_relationships (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 368, in test_delete_with_keeping_parents_relationships
    child.delete(keep_parents=True)
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_deletion_order (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 231, in test_deletion_order
    r.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 310, in delete
    deleted_counter[model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_hidden_related (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 319, in test_hidden_related
    r.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_instance_update (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 198, in test_instance_update
    a.setnull.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_large_delete (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 335, in test_large_delete
    self.assertNumQueries(queries, Avatar.objects.all().delete)
  File "/testbed/django/test/testcases.py", line 1066, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 700, in delete
    deleted, _rows_count = collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_large_delete_related (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 353, in test_large_delete_related
    self.assertNumQueries(expected_num_queries, s.delete)
  File "/testbed/django/test/testcases.py", line 1066, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_m2m (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 148, in test_m2m
    r.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_model_delete_returns_num_rows (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 424, in test_model_delete_returns_num_rows
    deleted, deleted_objs = r.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_proxied_model_duplicate_queries (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 438, in test_proxied_model_duplicate_queries
    avatar.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_queryset_delete_returns_num_rows (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 380, in test_queryset_delete_returns_num_rows
    deleted, rows_count = Avatar.objects.all().delete()
  File "/testbed/django/db/models/query.py", line 700, in delete
    deleted, _rows_count = collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_relational_post_delete_signals_happen_before_parent_object (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 256, in test_relational_post_delete_signals_happen_before_parent_object
    r.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_fast_delete_empty_no_update_can_self_select (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 531, in test_fast_delete_empty_no_update_can_self_select
    User.objects.filter(avatar__desc='missing').delete(),
  File "/testbed/django/db/models/query.py", line 700, in delete
    deleted, _rows_count = collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_fast_delete_fk (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 450, in test_fast_delete_fk
    self.assertNumQueries(2, a.delete)
  File "/testbed/django/test/testcases.py", line 1066, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_fast_delete_inheritance (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 497, in test_fast_delete_inheritance
    self.assertNumQueries(2, c.delete)
  File "/testbed/django/test/testcases.py", line 1066, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 310, in delete
    deleted_counter[model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_fast_delete_joined_qs (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 489, in test_fast_delete_joined_qs
    User.objects.filter(avatar__desc='a').delete)
  File "/testbed/django/test/testcases.py", line 1066, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 700, in delete
    deleted, _rows_count = collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_fast_delete_large_batch (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 515, in test_fast_delete_large_batch
    self.assertNumQueries(1, User.objects.all().delete)
  File "/testbed/django/test/testcases.py", line 1066, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 700, in delete
    deleted, _rows_count = collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_fast_delete_m2m (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 459, in test_fast_delete_m2m
    self.assertNumQueries(2, f.delete)
  File "/testbed/django/test/testcases.py", line 1066, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_fast_delete_qs (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 471, in test_fast_delete_qs
    self.assertNumQueries(1, User.objects.filter(pk=u1.pk).delete)
  File "/testbed/django/test/testcases.py", line 1066, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 700, in delete
    deleted, _rows_count = collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_fast_delete_revm2m (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 466, in test_fast_delete_revm2m
    self.assertNumQueries(2, f.delete)
  File "/testbed/django/test/testcases.py", line 1066, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_auto (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 20, in test_auto
    a.auto.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_auto_nullable (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 25, in test_auto_nullable
    a.auto_nullable.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_cascade (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 54, in test_cascade
    a.cascade.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_cascade_from_child (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 109, in test_cascade_from_child
    a.child.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_cascade_from_parent (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 115, in test_cascade_from_parent
    R.objects.get(pk=a.child_id).delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_cascade_nullable (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 59, in test_cascade_nullable
    a.cascade_nullable.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_do_nothing (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 81, in test_do_nothing
    a.donothing.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_inheritance_cascade_down (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 104, in test_inheritance_cascade_down
    parent.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_inheritance_cascade_up (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 98, in test_inheritance_cascade_up
    child.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_o2o_setnull (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 137, in test_o2o_setnull
    a.o2o_setnull.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_setdefault (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 42, in test_setdefault
    a.setdefault.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_setdefault_none (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 48, in test_setdefault_none
    a.setdefault_none.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_setnull (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 36, in test_setnull
    a.setnull.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment

======================================================================
ERROR: test_setnull_from_child (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 121, in test_setnull_from_child
    a.child_setnull.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_setnull_from_parent (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 129, in test_setnull_from_parent
    R.objects.get(pk=a.child_setnull_id).delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 292, in delete
    deleted_counter[qs.model._meta.label] += count
NameError: name 'deleted_counter' is not defined

======================================================================
ERROR: test_setvalue (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 30, in test_setvalue
    a.setvalue.delete()
  File "/testbed/django/db/models/base.py", line 919, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 279, in delete
    return count, {model._meta.label: count}
UnboundLocalError: local variable 'count' referenced before assignment
Testing against Django installed in '/testbed/django'
Importing application delete
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, delete, messages, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table delete_r
    Creating table delete_s
    Creating table delete_t
    Creating table delete_u
    Creating table delete_rchild
    Creating table delete_a
    Creating table delete_m
    Creating table delete_mr
    Creating table delete_mrnull
    Creating table delete_avatar
    Creating table delete_user
    Creating table delete_hiddenuser
    Creating table delete_hiddenuserprofile
    Creating table delete_m2mto
    Creating table delete_m2mfrom
    Creating table delete_parent
    Creating table delete_child
    Creating table delete_base
    Creating table delete_reltobase
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).

======================================================================
FAIL: test_fast_delete_instance_set_pk_none (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 481, in test_fast_delete_instance_set_pk_none
    self.assertIsNone(u.pk)
AssertionError: 1 is not None

======================================================================
FAIL: test_do_nothing_qscount (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 93, in test_do_nothing_qscount
    b.delete()
  File "/testbed/django/test/testcases.py", line 85, in __exit__
    '%d. %s' % (i, query['sql']) for i, query in enumerate(self.captured_queries, start=1)
AssertionError: 2 != 1 : 2 queries executed, 1 expected
Captured queries were:
1. DELETE FROM "delete_base" WHERE "delete_base"."id" IN (1)
2. DELETE FROM "delete_base" WHERE "delete_base"."id" IN (1)

----------------------------------------------------------------------
Ran 42 tests in 0.793s

FAILED (failures=2, errors=38, skipped=1)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
+ : '>>>>> End Test Output'
+ git checkout 19fc6376ce67d01ca37a91ef2f55ef769f50513a tests/delete/tests.py
Updated 1 path from a40bb59e08
