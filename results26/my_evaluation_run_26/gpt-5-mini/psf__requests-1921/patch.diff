diff --git a/requests/sessions.py b/requests/sessions.py
index a023e4e..e2be978 100644
--- a/requests/sessions.py
+++ b/requests/sessions.py
@@ -19,40 +19,21 @@ from .models import Request, PreparedRequest, DEFAULT_REDIRECT_LIMIT
 from .hooks import default_hooks, dispatch_hook
 from .utils import to_key_val_list, default_headers, to_native_string
 from .exceptions import TooManyRedirects, InvalidSchema
-from .structures import CaseInsensitiveDict
-
-from .adapters import HTTPAdapter
-
-from .utils import requote_uri, get_environ_proxies, get_netrc_auth
-
-from .status_codes import codes
-
-# formerly defined here, reexposed here for backward compatibility
-from .models import REDIRECT_STATI
-
-
 def merge_setting(request_setting, session_setting, dict_class=OrderedDict):
-    """
-    Determines appropriate setting for a given request, taking into account the
-    explicit setting on that request, and the setting in the session. If a
-    setting is a dictionary, they will be merged together using `dict_class`
-    """
-
-    if session_setting is None:
-        return request_setting
-
+    """Determine setting for a request, merging session and request values."""
+    if session_setting is None: return request_setting
     if request_setting is None:
+        # No per-request override; filter out keys set to None in session.
+        if isinstance(session_setting, Mapping):
+            filtered = dict_class(to_key_val_list(session_setting))
+            for k, v in list(filtered.items()):
+                if v is None: del filtered[k]
+            return filtered
         return session_setting
-
-    # Bypass if not a dictionary (e.g. verify)
-    if not (
-            isinstance(session_setting, Mapping) and
-            isinstance(request_setting, Mapping)
-    ):
+    if not (isinstance(session_setting, Mapping) and isinstance(request_setting, Mapping)):
         return request_setting
-
     merged_setting = dict_class(to_key_val_list(session_setting))
-    merged_setting.update(to_key_val_list(request_setting))
+
 
     # Remove keys that are set to None.
     for (k, v) in request_setting.items():