diff --git a/astropy/utils/misc.py b/astropy/utils/misc.py
index de3fb01d1..c4619c1b6 100644
--- a/astropy/utils/misc.py
+++ b/astropy/utils/misc.py
@@ -520,7 +520,7 @@ class InheritDocstrings(type):
         u'Wiggle the thingamajig'
     """
 
-    def __init__(cls, name, bases, dct):
+def __init__(cls, name, bases, dct):
         def is_public_member(key):
             return (
                 (key.startswith('__') and key.endswith('__')
@@ -528,14 +528,30 @@ class InheritDocstrings(type):
                 not key.startswith('_'))
 
         for key, val in dct.items():
-            if (inspect.isfunction(val) and
-                is_public_member(key) and
-                val.__doc__ is None):
-                for base in cls.__mro__[1:]:
-                    super_method = getattr(base, key, None)
-                    if super_method is not None:
-                        val.__doc__ = super_method.__doc__
-                        break
+            # Handle functions and properties (inspect.isfunction is False for
+            # properties, so explicitly check for property objects).
+            if is_public_member(key) and val.__doc__ is None:
+                # Normal functions / methods
+                if inspect.isfunction(val):
+                    for base in cls.__mro__[1:]:
+                        super_method = getattr(base, key, None)
+                        if super_method is not None:
+                            val.__doc__ = super_method.__doc__
+                            break
+                # Properties need their fget's __doc__ updated (property.__doc__
+                # is derived from fget.__doc__).
+                elif isinstance(val, property):
+                    for base in cls.__mro__[1:]:
+                        super_method = getattr(base, key, None)
+                        if super_method is not None:
+                            doc = getattr(super_method, '__doc__', None)
+                            # If super_method is a property, its __doc__ may come
+                            # from its fget; getattr above should handle both.
+                            if doc:
+                                if val.fget is not None:
+                                    val.fget.__doc__ = doc
+                                # If there's no fget (odd), we can't set a docstring.
+                                break
 
         super().__init__(name, bases, dct)