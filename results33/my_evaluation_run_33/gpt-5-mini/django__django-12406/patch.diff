diff --git a/django/forms/models.py b/django/forms/models.py
index dafc11f995..305918147e 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -1169,8 +1169,6 @@ class ModelChoiceIterator:
             ModelChoiceIteratorValue(self.field.prepare_value(obj), obj),
             self.field.label_from_instance(obj),
         )
-
-
 class ModelChoiceField(ChoiceField):
     """A ChoiceField whose choices are a model QuerySet."""
     # This class is a subclass of ChoiceField for purity, but it doesn't
@@ -1191,11 +1189,21 @@ class ModelChoiceField(ChoiceField):
             self.empty_label = empty_label
 
         # Call Field instead of ChoiceField __init__() because we don't need
-        # ChoiceField.__init__().
         Field.__init__(
             self, required=required, widget=widget, label=label,
             initial=initial, help_text=help_text, **kwargs
         )
+
+        # If the widget is a RadioSelect, don't show an empty label for required
+        # ModelChoiceFields because RadioSelect already has an inherent unselected
+        # state that makes the empty option confusing.
+        from django.forms.widgets import RadioSelect
+        if required and initial is None and isinstance(getattr(self, 'widget', None), RadioSelect):
+            self.empty_label = None
+
+        self.queryset = queryset
+        self.limit_choices_to = limit_choices_to   # limit the queryset later.
+        self.to_field_name = to_field_name
         self.queryset = queryset
         self.limit_choices_to = limit_choices_to   # limit the queryset later.
         self.to_field_name = to_field_name