diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py
index 7c978c47be..19f215ed72 100644
--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -176,12 +176,6 @@ def __new__(cls, *args, **kwargs):
 
         # the general Point
         return GeometryEntity.__new__(cls, *coords)
-
-    def __abs__(self):
-        """Returns the distance between this point and the origin."""
-        origin = Point([0]*len(self))
-        return Point.distance(origin, self)
-
     def __add__(self, other):
         """Add other to self by incrementing self's coordinates by
         those of other.
@@ -209,18 +203,17 @@ def __add__(self, other):
 
         See Also
         ========
-
         sympy.geometry.point.Point.translate
-
         """
         try:
             s, o = Point._normalize_dimension(self, Point(other, evaluate=False))
         except TypeError:
             raise GeometryError("Don't know how to add {} and a Point object".format(other))
-
         coords = [simplify(a + b) for a, b in zip(s, o)]
         return Point(coords, evaluate=False)
 
+        return Point(coords, evaluate=False)
+
     def __contains__(self, item):
         return item in self.args
 
@@ -278,6 +271,9 @@ def __mul__(self, factor):
         coords = [simplify(x*factor) for x in self.args]
         return Point(coords, evaluate=False)
 
+    def __rmul__(self, factor):
+        """Right-side multiplication: delegate to __mul__."""
+        return self.__mul__(factor)
     def __neg__(self):
         """Negate the point."""
         coords = [-x for x in self.args]