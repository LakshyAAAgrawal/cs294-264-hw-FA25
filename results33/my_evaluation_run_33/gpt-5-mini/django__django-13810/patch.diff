diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py
index 8e8c3da06a..4f3c11ad55 100644
--- a/django/core/handlers/base.py
+++ b/django/core/handlers/base.py
@@ -22,7 +22,6 @@ class BaseHandler:
     _template_response_middleware = None
     _exception_middleware = None
     _middleware_chain = None
-
     def load_middleware(self, is_async=False):
         """
         Populate middleware lists from settings.MIDDLEWARE.
@@ -49,6 +48,7 @@ class BaseHandler:
                 middleware_is_async = False
             else:
                 middleware_is_async = middleware_can_async
+            handler_before = handler
             try:
                 # Adapt handler, if needed.
                 handler = self.adapt_method_mode(
@@ -57,6 +57,10 @@ class BaseHandler:
                 )
                 mw_instance = middleware(handler)
             except MiddlewareNotUsed as exc:
+                # Restore the handler to the previous value so a MiddlewareNotUsed
+                # raised during instantiation doesn't leave the adapted handler
+                # in place and "poison" the middleware chain.
+                handler = handler_before
                 if settings.DEBUG:
                     if str(exc):
                         logger.debug('MiddlewareNotUsed(%r): %s', middleware_path, exc)
@@ -93,7 +97,6 @@ class BaseHandler:
         # We only assign to this when initialization is complete as it is used
         # as a flag for initialization being complete.
         self._middleware_chain = handler
-
     def adapt_method_mode(
         self, is_async, method, method_is_async=None, debug=False, name=None,
     ):