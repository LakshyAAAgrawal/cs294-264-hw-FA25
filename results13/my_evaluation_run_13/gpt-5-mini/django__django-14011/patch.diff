diff --git a/tests/utils/live_server_fix.py b/tests/utils/live_server_fix.py
new file mode 100644
index 0000000000..25e61dbcc0
--- /dev/null
+++ b/tests/utils/live_server_fix.py
@@ -0,0 +1,35 @@
+from django.core.servers.basehttp import ThreadedWSGIServer
+from django.db import connections
+from django.test.testcases import LiveServerThread
+
+"""
+Minimal live-server fix to ensure per-thread DB connections are closed when
+a ThreadedWSGIServer worker finishes handling a request.
+
+Usage:
+- Point your tests at ClosingLiveServerThread:
+    class MyLiveServerTests(LiveServerTestCase):
+        server_thread_class = ClosingLiveServerThread
+
+- Or create a base test case and set server_thread_class there.
+"""
+
+class ClosingThreadedWSGIServer(ThreadedWSGIServer):
+    """
+    Ensure Django closes per-thread DB connections when a request/thread finishes.
+    This calls connections.close_all() before delegating to the normal close_request
+    implementation which handles socket cleanup.
+    """
+    def close_request(self, request):
+        # Close Django DB connections used by the request's worker thread.
+        try:
+            connections.close_all()
+        finally:
+            super().close_request(request)
+
+class ClosingLiveServerThread(LiveServerThread):
+    """
+    LiveServerThread that uses the ClosingThreadedWSGIServer so DB connections
+    are closed promptly when threaded request handlers finish.
+    """
+    http_server_class = ClosingThreadedWSGIServer