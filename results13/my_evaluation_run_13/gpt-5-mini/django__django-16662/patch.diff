diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py
index a59f0c8dcb..20ad0136cd 100644
--- a/django/db/migrations/writer.py
+++ b/django/db/migrations/writer.py
@@ -87,18 +87,7 @@ class OperationWriter:
         self.indent()
 
         for i, arg in enumerate(args):
-            arg_value = arg
-            arg_name = operation_args[i]
-            _write(arg_name, arg_value)
-
-        i = len(args)
-        # Only iterate over remaining arguments
-        for arg_name in operation_args[i:]:
-            if arg_name in kwargs:  # Don't sort to maintain signature order
-                arg_value = kwargs[arg_name]
-                _write(arg_name, arg_value)
-
-        self.unindent()
+self.unindent()
         self.feed("),")
         return self.render(), imports
 
@@ -173,9 +162,15 @@ class MigrationWriter:
         else:
             imports.add("from django.db import migrations")
 
-        # Sort imports by the package / module to be imported (the part after
-        # "from" in "from ... import ..." or after "import" in "import ...").
-        sorted_imports = sorted(imports, key=lambda i: i.split()[1])
+        # Sort imports into "import X" and "from X import Y" sections,
+        # placing plain module imports before from-imports (isort default).
+        plain_imports = sorted(
+            [i for i in imports if i.startswith("import ")], key=lambda i: i.split()[1]
+        )
+        from_imports = sorted(
+            [i for i in imports if i.startswith("from ")], key=lambda i: i.split()[1]
+        )
+        sorted_imports = plain_imports + from_imports
         items["imports"] = "\n".join(sorted_imports) + "\n" if imports else ""
         if migration_imports:
             items["imports"] += (
@@ -198,6 +193,8 @@ class MigrationWriter:
         else:
             items["migration_header"] = ""
 
+        if self.migration.initial:
+
         if self.migration.initial:
             items["initial_str"] = "\n    initial = True\n"