diff --git a/django/views/generic/base.py b/django/views/generic/base.py
index ea5baca08d..1e6d201fef 100644
--- a/django/views/generic/base.py
+++ b/django/views/generic/base.py
@@ -11,11 +11,8 @@ from django.template.response import TemplateResponse
 from django.urls import reverse
 from django.utils.decorators import classonlymethod
 from django.utils.deprecation import RemovedInDjango40Warning
-from django.utils.functional import SimpleLazyObject
-
 logger = logging.getLogger('django.request')
 
-
 class ContextMixin:
     """
     A default context mixin that passes the keyword arguments received by
@@ -27,6 +24,23 @@ class ContextMixin:
         kwargs.setdefault('view', self)
         if self.extra_context is not None:
             kwargs.update(self.extra_context)
+        # Resolve SimpleLazyObject values in kwargs so downstream users (e.g. ORM filters)
+        # receive the underlying objects instead of lazy proxies which may cause errors.
+        for key, value in list(kwargs.items()):
+            if isinstance(value, SimpleLazyObject):
+                try:
+                    # Force evaluation of the lazy object.
+                    value._setup()
+                except Exception:
+                    # If _setup() fails or is already evaluated, ignore and fall back.
+                    pass
+                try:
+                    kwargs[key] = value._wrapped
+                except Exception:
+                    # As a last resort, leave the original lazy object in place.
+                    kwargs[key] = value
+        return kwargs
+            kwargs.update(self.extra_context)
         return kwargs