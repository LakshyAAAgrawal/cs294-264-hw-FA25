diff --git a/docs/ref/settings.txt b/docs/ref/settings.txt
index 41387886c0..1e10efcc40 100644
--- a/docs/ref/settings.txt
+++ b/docs/ref/settings.txt
@@ -2265,23 +2265,75 @@ Django will refuse to start if :setting:`SECRET_KEY` is not set.
     Running Django with a known :setting:`SECRET_KEY` defeats many of Django's
     security protections, and can lead to privilege escalation and remote code
     execution vulnerabilities.
-
-The secret key is used for:
-
-* All :doc:`sessions </topics/http/sessions>` if you are using
-  any other session backend than ``django.contrib.sessions.backends.cache``,
-  or are using the default
-  :meth:`~django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash()`.
-* All :doc:`messages </ref/contrib/messages>` if you are using
-  :class:`~django.contrib.messages.storage.cookie.CookieStorage` or
-  :class:`~django.contrib.messages.storage.fallback.FallbackStorage`.
-* All :class:`~django.contrib.auth.views.PasswordResetView` tokens.
-* Any usage of :doc:`cryptographic signing </topics/signing>`, unless a
-  different key is provided.
-
-When a secret key is no longer set as :setting:`SECRET_KEY` or contained within
-:setting:`SECRET_KEY_FALLBACKS` all of the above will be invalidated. When
-rotating your secret key, you should move the old key to
+2268  The secret key is used for:
+        
+  2269  * All :doc:`sessions </topics/http/sessions>` if you are using
+  2270    any other session backend than ``django.contrib.sessions.backends.cache``,
+  2271    or are using the default
+  2272    :meth:`~django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash()`.
+  2273  * All :doc:`messages </ref/contrib/messages>` if you are using
+  2274    :class:`~django.contrib.messages.storage.cookie.CookieStorage` or
+  2275    :class:`~django.contrib.messages.storage.fallback.FallbackStorage`.
+  2276  * All :class:`~django.contrib.auth.views.PasswordResetView` tokens.
+  2277  * Any usage of :doc:`cryptographic signing </topics/signing>`, unless a
+  2278    different key is provided.
+        
+  2279  When a secret key is no longer set as :setting:`SECRET_KEY` or contained within
+  2280  :setting:`SECRET_KEY_FALLBACKS` all of the above will be invalidated. When
+  2281  rotating your secret key, you should move the old key to
+  2282  :setting:`SECRET_KEY_FALLBACKS` temporarily. Secret keys are not used for
+  2283  passwords of users and key rotation will not affect them.
+  2284  
+  2285  .. note::
+  2286  
+  2287      The default :file:`settings.py` file created by :djadmin:`django-admin
+  2288      startproject <startproject>` creates a unique ``SECRET_KEY`` for
+  2289      convenience.
+        
+  2290  .. setting:: SECRET_KEY_FALLBACKS
+        
+  2291  ``SECRET_KEY_FALLBACKS``
+  2292  ------------------------
+        
+  2293  Default: ``[]``
+        
+  2294  A list of fallback secret keys for a particular Django installation. These are
+  2295  used to allow rotation of the ``SECRET_KEY``.
+        
+  2296  In order to rotate your secret keys, set a new ``SECRET_KEY`` and move the
+  2297  previous value to the beginning of ``SECRET_KEY_FALLBACKS``. Then remove the
+  2298  old values from the end of the ``SECRET_KEY_FALLBACKS`` when you are ready to
+  2299  expire the sessions, password reset tokens, and so on, that make use of them.
+        
+  2300  .. note::
+        
+  2301      Signing operations are computationally expensive. Having multiple old key
+  2302      values in ``SECRET_KEY_FALLBACKS`` adds additional overhead to all checks
+  2303      that don't match an earlier key.
+        
+  2304  A note about rotation and fallbacks
+  2305  ------------------------------
+  2306  
+  2307  The signing framework (``django.core.signing`` and classes that use it,
+  2308  such as cookie signers returned by :func:`django.core.signing.get_cookie_signer`)
+  2309  supports ``SECRET_KEY_FALLBACKS``: Signer instances will try the current
+  2310  :setting:`SECRET_KEY` and then any keys listed in ``SECRET_KEY_FALLBACKS`` when
+  2311  validating signatures. However, not all code that derives HMACs consults
+  2312  ``SECRET_KEY_FALLBACKS``. Some utilities (for example
+  2313  :meth:`~django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash`)
+  2314  call :func:`django.utils.crypto.salted_hmac` without providing an explicit
+  2315  ``secret`` argument; ``salted_hmac`` defaults to using
+  2316  :setting:`SECRET_KEY` only and therefore will not try fallback keys. As a
+  2317  result, rotating the ``SECRET_KEY`` can still invalidate values produced by
+  2318  such code even if the old key is present in ``SECRET_KEY_FALLBACKS``.
+  2319  
+  2320  For safe key rotation in multi-instance deployments, consider a phased rollout:
+  2321  set the new ``SECRET_KEY`` on some instances while keeping the old key as
+  2322  the current ``SECRET_KEY`` on others, or ensure any components that compute
+  2323  HMACs directly (not via the signing framework) are updated to accept explicit
+  2324  secrets or otherwise coordinate the rotation. Remove old keys from
+  2325  ``SECRET_KEY_FALLBACKS`` once you are confident the values signed with them
+  2326  have expired.
 :setting:`SECRET_KEY_FALLBACKS` temporarily. Secret keys are not used for
 passwords of users and key rotation will not affect them.