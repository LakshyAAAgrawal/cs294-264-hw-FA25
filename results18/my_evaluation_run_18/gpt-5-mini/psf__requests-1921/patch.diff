diff --git a/requests/sessions.py b/requests/sessions.py
index a023e4e..1c6c59c 100644
--- a/requests/sessions.py
+++ b/requests/sessions.py
@@ -21,16 +21,6 @@ from .utils import to_key_val_list, default_headers, to_native_string
 from .exceptions import TooManyRedirects, InvalidSchema
 from .structures import CaseInsensitiveDict
 
-from .adapters import HTTPAdapter
-
-from .utils import requote_uri, get_environ_proxies, get_netrc_auth
-
-from .status_codes import codes
-
-# formerly defined here, reexposed here for backward compatibility
-from .models import REDIRECT_STATI
-
-
 def merge_setting(request_setting, session_setting, dict_class=OrderedDict):
     """
     Determines appropriate setting for a given request, taking into account the
@@ -42,12 +32,24 @@ def merge_setting(request_setting, session_setting, dict_class=OrderedDict):
         return request_setting
 
     if request_setting is None:
+        # If the request did not provide a setting, return the session setting
+        # but remove any keys explicitly set to None on the session (treat None
+        # as "delete this default").
+        if isinstance(session_setting, Mapping):
+            cleaned = dict_class(to_key_val_list(session_setting))
+            for (k, v) in list(session_setting.items()):
+                if v is None and k in cleaned:
+                    del cleaned[k]
+            return cleaned
         return session_setting
 
     # Bypass if not a dictionary (e.g. verify)
     if not (
             isinstance(session_setting, Mapping) and
             isinstance(request_setting, Mapping)
+    ):
+            isinstance(session_setting, Mapping) and
+            isinstance(request_setting, Mapping)
     ):
         return request_setting