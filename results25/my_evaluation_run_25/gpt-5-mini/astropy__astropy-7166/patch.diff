diff --git a/astropy/utils/misc.py b/astropy/utils/misc.py
index de3fb01d1..3ca453ef4 100644
--- a/astropy/utils/misc.py
+++ b/astropy/utils/misc.py
@@ -528,6 +528,7 @@ class InheritDocstrings(type):
                 not key.startswith('_'))
 
         for key, val in dct.items():
+            # Handle regular functions/methods
             if (inspect.isfunction(val) and
                 is_public_member(key) and
                 val.__doc__ is None):
@@ -537,6 +538,21 @@ class InheritDocstrings(type):
                         val.__doc__ = super_method.__doc__
                         break
 
+            # Handle properties: inspect.isfunction returns False for property objects,
+            # so detect property instances and copy the docstring from the base.
+            if (isinstance(val, property) and
+                is_public_member(key) and
+                val.__doc__ is None):
+                for base in cls.__mro__[1:]:
+                    super_method = getattr(base, key, None)
+                    if super_method is not None:
+                        # super_method may itself be a property or a function; use its __doc__
+                        super_doc = getattr(super_method, '__doc__', None)
+                        if super_doc:
+                            # Recreate the property with the inherited docstring.
+                            setattr(cls, key, property(val.fget, val.fset, val.fdel, super_doc))
+                            break
+
         super().__init__(name, bases, dct)