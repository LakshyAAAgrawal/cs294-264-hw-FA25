diff --git a/django/views/generic/base.py b/django/views/generic/base.py
index ea5baca08d..698d4811c0 100644
--- a/django/views/generic/base.py
+++ b/django/views/generic/base.py
@@ -9,9 +9,7 @@ from django.http import (
 )
 from django.template.response import TemplateResponse
 from django.urls import reverse
-from django.utils.decorators import classonlymethod
-from django.utils.deprecation import RemovedInDjango40Warning
-from django.utils.functional import SimpleLazyObject
+from django.utils.functional import SimpleLazyObject, empty
 
 logger = logging.getLogger('django.request')
 
@@ -27,9 +25,17 @@ class ContextMixin:
         kwargs.setdefault('view', self)
         if self.extra_context is not None:
             kwargs.update(self.extra_context)
+        # Evaluate any SimpleLazyObject values so callers receive concrete values
+        # (avoids errors like "Error binding parameter ... unsupported type").
+        for key, value in list(kwargs.items()):
+            if isinstance(value, SimpleLazyObject):
+                if getattr(value, '_wrapped', None) is empty:
+                    value._setup()
+                kwargs[key] = value._wrapped
         return kwargs
 
 
+
 class View:
     """
     Intentionally simple parent class for all views. Only implements