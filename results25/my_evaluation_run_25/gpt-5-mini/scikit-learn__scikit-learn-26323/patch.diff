diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py
index 4eddd12b1..753321a53 100644
--- a/sklearn/compose/_column_transformer.py
+++ b/sklearn/compose/_column_transformer.py
@@ -261,7 +261,6 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):
             return [(name, trans) for name, trans, _ in self.transformers]
         except (TypeError, ValueError):
             return self.transformers
-
     @_transformers.setter
     def _transformers(self, value):
         try:
@@ -271,7 +270,6 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):
             ]
         except (TypeError, ValueError):
             self.transformers = value
-
     def set_output(self, *, transform=None):
         """Set the output container when `"transform"` and `"fit_transform"` are called.
 
@@ -303,6 +301,21 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):
         for trans in transformers:
             _safe_set_output(trans, transform=transform)
 
+        # Also ensure the remainder estimator (if any and not a string specifier)
+        # receives the same output configuration. This fixes the case where a
+        # remainder estimator was ignored by set_output.
+        if hasattr(self, "_remainder"):
+            remainder = self.remainder
+            if (
+                remainder is not None
+                and remainder not in {"passthrough", "drop"}
+                and not isinstance(remainder, str)
+            ):
+                _safe_set_output(remainder, transform=transform)
+        return self
+
+
+
         return self
 
     def get_params(self, deep=True):