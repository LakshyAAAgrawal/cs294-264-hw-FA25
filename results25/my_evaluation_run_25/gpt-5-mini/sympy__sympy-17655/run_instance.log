2025-10-04 05:48:51,815 - INFO - Creating container for sympy__sympy-17655...
2025-10-04 05:48:51,931 - INFO - Container for sympy__sympy-17655 created: 73c51cc8231805b32f0ef3225bef3c6b6c308ddbaf3b740a3d0bab23f048f849
2025-10-04 05:48:52,016 - INFO - Container for sympy__sympy-17655 started: 73c51cc8231805b32f0ef3225bef3c6b6c308ddbaf3b740a3d0bab23f048f849
2025-10-04 05:48:52,016 - INFO - Intermediate patch for sympy__sympy-17655 written to logs/run_evaluation/my_evaluation_run_25/gpt-5-mini/sympy__sympy-17655/patch.diff, now applying to container...
2025-10-04 05:48:52,149 - INFO - Failed to apply patch to container: git apply --verbose
2025-10-04 05:48:52,210 - INFO - Failed to apply patch to container: git apply --verbose --reject
2025-10-04 05:48:52,273 - INFO - >>>>> Applied Patch:
patching file sympy/geometry/point.py
patch unexpectedly ends in middle of line
Hunk #1 succeeded at 167 with fuzz 1.

2025-10-04 05:48:52,583 - INFO - Git diff before:
diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py
index 7c978c47be..f076f6cc22 100644
--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -167,11 +167,31 @@ def __new__(cls, *args, **kwargs):
                  for f in coords.atoms(Float)]))
 
         # return 2D or 3D instances
-        if len(coords) == 2:
-            kwargs['_nocheck'] = True
-            return Point2D(*coords, **kwargs)
-        elif len(coords) == 3:
-            kwargs['_nocheck'] = True
+        try:
+            s, o = Point._normalize_dimension(self, Point(other, evaluate=False))
+        except TypeError:
+            # If other is a Mul like 2*Point, try to extract the Point and
+            # scale it using Point.__mul__ so that scalar*Point behaves
+            # the same as Point*scalar.
+            from sympy.core.mul import Mul
+            if isinstance(other, Mul):
+                point_part = None
+                factor = None
+                for a in other.args:
+                    if isinstance(a, Point):
+                        point_part = a
+                    else:
+                        factor = a if factor is None else factor * a
+                if point_part is not None:
+                    if factor is None:
+                        factor = 1
+                    # Use the Point.__mul__ implementation to get a Point
+                    other = point_part.__mul__(factor)
+                    s, o = Point._normalize_dimension(self, Point(other, evaluate=False))
+                else:
+                    raise GeometryError("Don't know how to add {} and a Point object".format(other))
+            else:
+                raise GeometryError("Don't know how to add {} and a Point object".format(other))
             return Point3D(*coords, **kwargs)
 
         # the general Point
2025-10-04 05:48:52,583 - INFO - Eval script for sympy__sympy-17655 written to logs/run_evaluation/my_evaluation_run_25/gpt-5-mini/sympy__sympy-17655/eval.sh; copying to container...
2025-10-04 05:48:57,585 - INFO - Test runtime: 4.95 seconds
2025-10-04 05:48:57,586 - INFO - Test output for sympy__sympy-17655 written to logs/run_evaluation/my_evaluation_run_25/gpt-5-mini/sympy__sympy-17655/test_output.txt
2025-10-04 05:48:57,684 - INFO - Git diff after:
diff --git a/sympy/geometry/point.py b/sympy/geometry/point.py
index 7c978c47be..f076f6cc22 100644
--- a/sympy/geometry/point.py
+++ b/sympy/geometry/point.py
@@ -167,11 +167,31 @@ def __new__(cls, *args, **kwargs):
                  for f in coords.atoms(Float)]))
 
         # return 2D or 3D instances
-        if len(coords) == 2:
-            kwargs['_nocheck'] = True
-            return Point2D(*coords, **kwargs)
-        elif len(coords) == 3:
-            kwargs['_nocheck'] = True
+        try:
+            s, o = Point._normalize_dimension(self, Point(other, evaluate=False))
+        except TypeError:
+            # If other is a Mul like 2*Point, try to extract the Point and
+            # scale it using Point.__mul__ so that scalar*Point behaves
+            # the same as Point*scalar.
+            from sympy.core.mul import Mul
+            if isinstance(other, Mul):
+                point_part = None
+                factor = None
+                for a in other.args:
+                    if isinstance(a, Point):
+                        point_part = a
+                    else:
+                        factor = a if factor is None else factor * a
+                if point_part is not None:
+                    if factor is None:
+                        factor = 1
+                    # Use the Point.__mul__ implementation to get a Point
+                    other = point_part.__mul__(factor)
+                    s, o = Point._normalize_dimension(self, Point(other, evaluate=False))
+                else:
+                    raise GeometryError("Don't know how to add {} and a Point object".format(other))
+            else:
+                raise GeometryError("Don't know how to add {} and a Point object".format(other))
             return Point3D(*coords, **kwargs)
 
         # the general Point
2025-10-04 05:48:57,684 - INFO - Grading answer for sympy__sympy-17655...
2025-10-04 05:48:57,686 - INFO - report: {'sympy__sympy-17655': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_point', 'test_point3D']}, 'PASS_TO_PASS': {'success': [], 'failure': ['test_Point2D', 'test_issue_9214', 'test_issue_11617', 'test_transform', 'test_concyclic_doctest_bug', 'test_arguments', 'test_unit', 'test_dot', 'test__normalize_dimension']}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for sympy__sympy-17655: resolved: False
2025-10-04 05:48:57,686 - INFO - Attempting to stop container sweb.eval.sympy__sympy-17655.my_evaluation_run_25...
2025-10-04 05:49:12,810 - INFO - Attempting to remove container sweb.eval.sympy__sympy-17655.my_evaluation_run_25...
2025-10-04 05:49:12,830 - INFO - Container sweb.eval.sympy__sympy-17655.my_evaluation_run_25 removed.
2025-10-04 05:49:12,830 - INFO - Attempting to remove image swebench/sweb.eval.x86_64.sympy_1776_sympy-17655:latest...
2025-10-04 05:49:13,016 - INFO - Image swebench/sweb.eval.x86_64.sympy_1776_sympy-17655:latest removed.
