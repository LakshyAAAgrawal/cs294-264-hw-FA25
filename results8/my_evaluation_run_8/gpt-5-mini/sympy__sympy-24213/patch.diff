diff --git a/sympy/physics/units/unitsystem.py b/sympy/physics/units/unitsystem.py
index a436880c4b..14af2b56c2 100644
--- a/sympy/physics/units/unitsystem.py
+++ b/sympy/physics/units/unitsystem.py
@@ -136,18 +136,18 @@ def get_dimensional_expr(self, expr):
         elif isinstance(expr, Add):
             return self.get_dimensional_expr(expr.args[0])
         elif isinstance(expr, Derivative):
-            dim = self.get_dimensional_expr(expr.expr)
-            for independent, count in expr.variable_count:
-                dim /= self.get_dimensional_expr(independent)**count
-            return dim
-        elif isinstance(expr, Function):
-            args = [self.get_dimensional_expr(arg) for arg in expr.args]
-            if all(i == 1 for i in args):
-                return S.One
-            return expr.func(*args)
-        elif isinstance(expr, Quantity):
-            return self.get_quantity_dimension(expr).name
-        return S.One
+elif isinstance(expr, Add):
+              factor, dim = self._collect_factor_and_dimension(expr.args[0])
+              for addend in expr.args[1:]:
+                  addend_factor, addend_dim = \
+                      self._collect_factor_and_dimension(addend)
+                  if not self.get_dimension_system().equivalent_dims(dim, addend_dim):
+                      raise ValueError(
+                          'Dimension of "{}" is {}, '
+                          'but it should be {}'.format(
+                              addend, addend_dim, dim))
+                  factor += addend_factor
+              return factor, dim
 
     def _collect_factor_and_dimension(self, expr):
         """