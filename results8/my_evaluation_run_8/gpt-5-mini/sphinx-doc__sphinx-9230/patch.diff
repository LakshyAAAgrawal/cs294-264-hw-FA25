Recommended fixes (two options):

1) Recommended (fast): upgrade Sphinx to >= 4.1.0 which contains the upstream bugfix.
   Command:
     pip install -U "sphinx>=4.1.0"

2) Automated patch (when you cannot upgrade immediately): run the small Python script below in your project root to convert docstrings of the form
     :param dict(str, str) name:
   into
     :param name:
     :type name: dict(str, str)
   This preserves the existing description and fixes rendering on older Sphinx.

Script (save/run as fix_docstrings.py or run with python3 -c):
python3 - <<'PY'
import re, glob, io, os
pattern = re.compile(r'(:param)\s+dict\(\s*([^)]+?)\s*\)\s+(\w+)\s*:(?P<rest>.*)')
for path in glob.glob("**/*.py", recursive=True) + glob.glob("**/*.rst", recursive=True) + glob.glob("**/*.txt", recursive=True):
    try:
        with open(path, "r", encoding="utf-8") as f:
            s = f.read()
    except Exception:
        continue
    def repl(m):
        rest = m.group('rest')
        return f":param {m.group(3)}:{rest}\n:type {m.group(3)}: dict({m.group(2)})"
    new = pattern.sub(repl, s)
    if new != s:
        with open(path, "w", encoding="utf-8") as f:
            f.write(new)
        print("Patched:", path)
print("Done.")
PY

After applying either option, rebuild your docs (e.g., make html) and verify the parameter now renders like:
  opc_meta (dict(str,str)) â€” (optional)

If you want, I can prepare a narrower patch (targeting only the files in your attached project) instead of the global script; I chose a safe global script to avoid missing files.

No changes detected to generate a patch.