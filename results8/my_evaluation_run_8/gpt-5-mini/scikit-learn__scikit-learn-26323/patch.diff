diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py
index 4eddd12b1..492dec617 100644
--- a/sklearn/compose/_column_transformer.py
+++ b/sklearn/compose/_column_transformer.py
@@ -269,10 +269,7 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):
                 (name, trans, col)
                 for ((name, trans), (_, _, col)) in zip(value, self.transformers)
             ]
-        except (TypeError, ValueError):
-            self.transformers = value
-
-    def set_output(self, *, transform=None):
+def set_output(self, *, transform=None):
         """Set the output container when `"transform"` and `"fit_transform"` are called.
 
         Calling `set_output` will set the output of all estimators in `transformers`
@@ -293,12 +290,27 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):
             Estimator instance.
         """
         super().set_output(transform=transform)
-        transformers = (
+        transformers = [
             trans
             for _, trans, _ in chain(
                 self.transformers, getattr(self, "transformers_", [])
             )
             if trans not in {"passthrough", "drop"}
+        ]
+        # Include remainder estimator if present and it's an actual estimator
+        # (i.e. not "drop" or "passthrough") and not already included.
+        if hasattr(self, "_remainder"):
+            rem = self._remainder[1]
+            if rem not in {"passthrough", "drop"} and rem not in transformers:
+                transformers.append(rem)
+
+        for trans in transformers:
+            _safe_set_output(trans, transform=transform)
+
+        return self
+                self.transformers, getattr(self, "transformers_", [])
+            )
+            if trans not in {"passthrough", "drop"}
         )
         for trans in transformers:
             _safe_set_output(trans, transform=transform)