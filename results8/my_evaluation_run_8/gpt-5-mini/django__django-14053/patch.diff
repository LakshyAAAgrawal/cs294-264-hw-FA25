diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py
index 494890cc23..de0d983860 100644
--- a/django/contrib/staticfiles/storage.py
+++ b/django/contrib/staticfiles/storage.py
@@ -219,21 +219,35 @@ class HashedFilesMixin:
             return
 
         # where to store the new paths
-        hashed_files = {}
-
-        # build a list of adjustable files
-        adjustable_paths = [
-            path for path in paths
-            if matches_patterns(path, self._patterns)
-        ]
-        # Do a single pass first. Post-process all files once, then repeat for
+# Do a single pass first. Post-process all files once, then repeat for
         # adjustable files.
+        yielded = set()
+        # First pass: post-process all files once.
         for name, hashed_name, processed, _ in self._post_process(paths, adjustable_paths, hashed_files):
+            if name in yielded:
+                continue
+            yielded.add(name)
             yield name, hashed_name, processed
 
         paths = {path: paths[path] for path in adjustable_paths}
 
+        # Subsequent passes: only yield each original file once (avoid duplicate
+        # yields across passes), but continue processing until no substitutions.
         for i in range(self.max_post_process_passes):
+            substitutions = False
+            for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):
+                # Always update substitutions (it reflects whether another pass is needed)
+                substitutions = substitutions or subst
+                if name in yielded:
+                    continue
+                yielded.add(name)
+                yield name, hashed_name, processed
+
+            if not substitutions:
+                break
+
+        if substitutions:
+            yield 'All', None, RuntimeError('Max post-process passes exceeded.')
             substitutions = False
             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):
                 yield name, hashed_name, processed