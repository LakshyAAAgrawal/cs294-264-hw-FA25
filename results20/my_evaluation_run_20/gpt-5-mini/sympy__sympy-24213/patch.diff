diff --git a/sympy/physics/units/unitsystem.py b/sympy/physics/units/unitsystem.py
index a436880c4b..a3afda6e93 100644
--- a/sympy/physics/units/unitsystem.py
+++ b/sympy/physics/units/unitsystem.py
@@ -163,24 +163,24 @@ def _collect_factor_and_dimension(self, expr):
                 arg_factor, arg_dim = self._collect_factor_and_dimension(arg)
                 factor *= arg_factor
                 dimension *= arg_dim
-            return factor, dimension
-        elif isinstance(expr, Pow):
-            factor, dim = self._collect_factor_and_dimension(expr.base)
-            exp_factor, exp_dim = self._collect_factor_and_dimension(expr.exp)
-            if self.get_dimension_system().is_dimensionless(exp_dim):
-                exp_dim = 1
-            return factor ** exp_factor, dim ** (exp_factor * exp_dim)
-        elif isinstance(expr, Add):
-            factor, dim = self._collect_factor_and_dimension(expr.args[0])
-            for addend in expr.args[1:]:
-                addend_factor, addend_dim = \
-                    self._collect_factor_and_dimension(addend)
-                if dim != addend_dim:
-                    raise ValueError(
-                        'Dimension of "{}" is {}, '
-                        'but it should be {}'.format(
-                            addend, addend_dim, dim))
-                factor += addend_factor
+elif isinstance(expr, Pow):
+                factor, dim = self._collect_factor_and_dimension(expr.base)
+                exp_factor, exp_dim = self._collect_factor_and_dimension(expr.exp)
+                if self.get_dimension_system().is_dimensionless(exp_dim):
+                    exp_dim = 1
+                return factor ** exp_factor, dim ** (exp_factor * exp_dim)
+            elif isinstance(expr, Add):
+                factor, dim = self._collect_factor_and_dimension(expr.args[0])
+                for addend in expr.args[1:]:
+                    addend_factor, addend_dim = \
+                        self._collect_factor_and_dimension(addend)
+                    if not self.get_dimension_system().equivalent_dims(dim, addend_dim):
+                        raise ValueError(
+                            'Dimension of "{}" is {}, '
+                            'but it should be {}'.format(
+                                addend, addend_dim, dim))
+                    factor += addend_factor
+                return factor, dim
             return factor, dim
         elif isinstance(expr, Derivative):
             factor, dim = self._collect_factor_and_dimension(expr.args[0])