diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py
index 8e8c3da06a..0bdc06bdd4 100644
--- a/django/core/handlers/base.py
+++ b/django/core/handlers/base.py
@@ -40,21 +40,21 @@ class BaseHandler:
             middleware = import_string(middleware_path)
             middleware_can_sync = getattr(middleware, 'sync_capable', True)
             middleware_can_async = getattr(middleware, 'async_capable', False)
-            if not middleware_can_sync and not middleware_can_async:
-                raise RuntimeError(
-                    'Middleware %s must have at least one of '
-                    'sync_capable/async_capable set to True.' % middleware_path
-                )
-            elif not handler_is_async and middleware_can_sync:
-                middleware_is_async = False
-            else:
-                middleware_is_async = middleware_can_async
-            try:
-                # Adapt handler, if needed.
-                handler = self.adapt_method_mode(
+try:
+                # Adapt handler, if needed, but don't overwrite until middleware accepts it.
+                adapted_handler = self.adapt_method_mode(
                     middleware_is_async, handler, handler_is_async,
                     debug=settings.DEBUG, name='middleware %s' % middleware_path,
                 )
+                mw_instance = middleware(adapted_handler)
+            except MiddlewareNotUsed as exc:
+                if settings.DEBUG:
+                    if str(exc):
+                        logger.debug('MiddlewareNotUsed(%r): %s', middleware_path, exc)
+                    else:
+                        logger.debug('MiddlewareNotUsed: %r', middleware_path)
+                continue
+                )
                 mw_instance = middleware(handler)
             except MiddlewareNotUsed as exc:
                 if settings.DEBUG: