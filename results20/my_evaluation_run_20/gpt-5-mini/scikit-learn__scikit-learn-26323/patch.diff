diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py
index 4eddd12b1..292e4ace2 100644
--- a/sklearn/compose/_column_transformer.py
+++ b/sklearn/compose/_column_transformer.py
@@ -282,23 +282,30 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):
         ----------
         transform : {"default", "pandas"}, default=None
             Configure output of `transform` and `fit_transform`.
-
-            - `"default"`: Default output format of a transformer
-            - `"pandas"`: DataFrame output
-            - `None`: Transform configuration is unchanged
-
-        Returns
-        -------
-        self : estimator instance
-            Estimator instance.
-        """
-        super().set_output(transform=transform)
-        transformers = (
+super().set_output(transform=transform)
+        transformers = [
             trans
             for _, trans, _ in chain(
                 self.transformers, getattr(self, "transformers_", [])
             )
             if trans not in {"passthrough", "drop"}
+        ]
+        for trans in transformers:
+            _safe_set_output(trans, transform=transform)
+
+        # Ensure remainder estimator also has its output configured when it is
+        # an estimator (not 'drop' or 'passthrough') and not already handled.
+        if hasattr(self, "_remainder"):
+            rem = self._remainder[1]
+        else:
+            rem = self.remainder
+        if not isinstance(rem, str) and rem is not None and rem not in transformers:
+            _safe_set_output(rem, transform=transform)
+
+        return self
+            _safe_set_output(rem, transform=transform)
+            )
+            if trans not in {"passthrough", "drop"}
         )
         for trans in transformers:
             _safe_set_output(trans, transform=transform)