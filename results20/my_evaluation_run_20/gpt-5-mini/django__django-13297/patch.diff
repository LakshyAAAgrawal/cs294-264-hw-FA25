diff --git a/django/views/generic/base.py b/django/views/generic/base.py
index ea5baca08d..5badb8f02b 100644
--- a/django/views/generic/base.py
+++ b/django/views/generic/base.py
@@ -12,18 +12,24 @@ from django.urls import reverse
 from django.utils.decorators import classonlymethod
 from django.utils.deprecation import RemovedInDjango40Warning
 from django.utils.functional import SimpleLazyObject
-
-logger = logging.getLogger('django.request')
-
-
 class ContextMixin:
-    """
-    A default context mixin that passes the keyword arguments received by
-    get_context_data() as the template context.
-    """
-    extra_context = None
-
-    def get_context_data(self, **kwargs):
+        """
+        A default context mixin that passes the keyword arguments received by
+        get_context_data() as the template context.
+        """
+        extra_context = None
+
+        def get_context_data(self, **kwargs):
+            kwargs.setdefault('view', self)
+            if self.extra_context is not None:
+                kwargs.update(self.extra_context)
+            # Resolve any SimpleLazyObject-wrapped values to their concrete form
+            # (e.g. URL kwargs wrapped by TemplateView). Converting to str() is a
+            # safe way to force evaluation for common cases like slugs.
+            for key, value in list(kwargs.items()):
+                if isinstance(value, SimpleLazyObject):
+                    kwargs[key] = str(value)
+            return kwargs
         kwargs.setdefault('view', self)
         if self.extra_context is not None:
             kwargs.update(self.extra_context)