diff --git a/django/core/servers/basehttp.py b/django/core/servers/basehttp.py
index 14dab517c9..364ee5207c 100644
--- a/django/core/servers/basehttp.py
+++ b/django/core/servers/basehttp.py
@@ -140,22 +140,28 @@ class WSGIRequestHandler(simple_server.WSGIRequestHandler):
                 )
                 return
 
-        if args[1].isdigit() and len(args[1]) == 3:
-            status_code = int(args[1])
-            extra['status_code'] = status_code
-
-            if status_code >= 500:
-                level = logger.error
-            elif status_code >= 400:
-                level = logger.warning
-            else:
-                level = logger.info
-        else:
-            level = logger.info
+def handle_one_request(self):
+        """Copy of WSGIRequestHandler.handle() but with different ServerHandler"""
+        self.raw_requestline = self.rfile.readline(65537)
+        if len(self.raw_requestline) > 65536:
+            self.requestline = ''
+            self.request_version = ''
+            self.command = ''
+            self.send_error(414)
+            return
 
-        level(format, *args, extra=extra)
+        if not self.parse_request():  # An error code has been sent, just exit
+            return
 
-    def get_environ(self):
+        handler = ServerHandler(
+            self.rfile, self.wfile, self.get_stderr(), self.get_environ()
+        )
+        handler.request_handler = self      # backpointer for logging & connection closing
+        from django.db import connections
+        try:
+            handler.run(self.server.get_app())
+        finally:
+            connections.close_all()
         # Strip all headers with underscores in the name before constructing
         # the WSGI environ. This prevents header-spoofing based on ambiguity
         # between underscores and dashes both normalized to underscores in WSGI