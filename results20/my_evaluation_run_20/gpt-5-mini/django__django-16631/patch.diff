diff --git a/docs/ref/settings.txt b/docs/ref/settings.txt
index 41387886c0..d4fb2938b8 100644
--- a/docs/ref/settings.txt
+++ b/docs/ref/settings.txt
@@ -2293,12 +2293,19 @@ passwords of users and key rotation will not affect them.
 
 .. setting:: SECRET_KEY_FALLBACKS
 
-``SECRET_KEY_FALLBACKS``
-------------------------
+A list of fallback secret keys for a particular Django installation. These are used to allow rotation of the ``SECRET_KEY`` in places that explicitly accept a ``secret`` argument for HMAC-based operations (for example, the signing framework and the password reset token generator).
+
+In order to rotate your secret keys for those operations, set a new ``SECRET_KEY`` and move the previous value to the beginning of ``SECRET_KEY_FALLBACKS``. Then remove the old values from the end of the ``SECRET_KEY_FALLBACKS`` when you are ready to expire the tokens that make use of them.
 
-Default: ``[]``
+.. note::
 
-A list of fallback secret keys for a particular Django installation. These are
+    Not all parts of Django that use HMAC consult ``SECRET_KEY_FALLBACKS``.
+    For example, :meth:`~django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash`
+    calls :func:`django.utils.crypto.salted_hmac` without supplying the
+    ``secret`` argument and therefore always uses the current
+    :setting:`SECRET_KEY`; storing old keys in ``SECRET_KEY_FALLBACKS`` will
+    not preserve existing session hashes. Consider the implications for your
+    sessions when rotating the main :setting:`SECRET_KEY`.
 used to allow rotation of the ``SECRET_KEY``.
 
 In order to rotate your secret keys, set a new ``SECRET_KEY`` and move the