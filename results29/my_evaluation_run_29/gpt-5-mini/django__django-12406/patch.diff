diff --git a/django/forms/models.py b/django/forms/models.py
index dafc11f995..999c72bdcd 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -3,21 +3,15 @@ Helper functions for creating Form classes from Django models
 and database field objects.
 """
 
-from itertools import chain
-
 from django.core.exceptions import (
     NON_FIELD_ERRORS, FieldError, ImproperlyConfigured, ValidationError,
 )
 from django.forms.fields import ChoiceField, Field
 from django.forms.forms import BaseForm, DeclarativeFieldsMetaclass
-from django.forms.formsets import BaseFormSet, formset_factory
-from django.forms.utils import ErrorList
 from django.forms.widgets import (
-    HiddenInput, MultipleHiddenInput, SelectMultiple,
+    HiddenInput, MultipleHiddenInput, SelectMultiple, RadioSelect,
 )
 from django.utils.text import capfirst, get_text_list
-from django.utils.translation import gettext, gettext_lazy as _
-
 __all__ = (
     'ModelForm', 'BaseModelForm', 'model_to_dict', 'fields_for_model',
     'ModelChoiceField', 'ModelMultipleChoiceField', 'ALL_FIELDS',
@@ -1171,10 +1165,6 @@ class ModelChoiceIterator:
         )
 
 
-class ModelChoiceField(ChoiceField):
-    """A ChoiceField whose choices are a model QuerySet."""
-    # This class is a subclass of ChoiceField for purity, but it doesn't
-    # actually use any of ChoiceField's implementation.
     default_error_messages = {
         'invalid_choice': _('Select a valid choice. That choice is not one of'
                             ' the available choices.'),
@@ -1190,6 +1180,21 @@ class ModelChoiceField(ChoiceField):
         else:
             self.empty_label = empty_label
 
+        # Do not add an empty choice for RadioSelect widgets when the field is required.
+        # Radio inputs already provide an unselected state; showing the "---------" option
+        # is confusing and results in a pre-checked empty choice on new forms.
+        if self.empty_label is not None and required and widget is not None:
+            try:
+                from django.forms.widgets import RadioSelect as _RadioSelect
+            except Exception:
+                _RadioSelect = None
+            if _RadioSelect is not None and (isinstance(widget, _RadioSelect) or widget is _RadioSelect):
+                self.empty_label = None
+    # Radio inputs already provide an unselected state; showing the "---------" option
+    # is confusing and results in a pre-checked empty choice on new forms.
+    if self.empty_label is not None and required and widget is not None:
+        if isinstance(widget, RadioSelect) or widget is RadioSelect:
+            self.empty_label = None
         # Call Field instead of ChoiceField __init__() because we don't need
         # ChoiceField.__init__().
         Field.__init__(