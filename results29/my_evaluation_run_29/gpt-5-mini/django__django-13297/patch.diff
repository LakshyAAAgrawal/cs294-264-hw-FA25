diff --git a/django/views/generic/base.py b/django/views/generic/base.py
index ea5baca08d..1412790b15 100644
--- a/django/views/generic/base.py
+++ b/django/views/generic/base.py
@@ -11,7 +11,7 @@ from django.template.response import TemplateResponse
 from django.urls import reverse
 from django.utils.decorators import classonlymethod
 from django.utils.deprecation import RemovedInDjango40Warning
-from django.utils.functional import SimpleLazyObject
+from django.utils.functional import SimpleLazyObject, empty
 
 logger = logging.getLogger('django.request')
 
@@ -27,15 +27,15 @@ class ContextMixin:
         kwargs.setdefault('view', self)
         if self.extra_context is not None:
             kwargs.update(self.extra_context)
+        # Unwrap any SimpleLazyObject URL kwargs (wrapped for deprecation warning)
+        for key, value in list(kwargs.items()):
+            if isinstance(value, SimpleLazyObject):
+                # Force evaluation of the lazy object to obtain the wrapped value
+                if getattr(value, '_wrapped', empty) is empty:
+                    value._setup()
+                kwargs[key] = value._wrapped
         return kwargs
 
-
-class View:
-    """
-    Intentionally simple parent class for all views. Only implements
-    dispatch-by-method and simple sanity checking.
-    """
-
     http_method_names = ['get', 'post', 'put', 'patch', 'delete', 'head', 'options', 'trace']
 
     def __init__(self, **kwargs):